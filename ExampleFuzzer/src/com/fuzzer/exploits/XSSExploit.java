package com.fuzzer.exploits;

import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.List;
import com.fuzzer.config.Config;
import com.fuzzer.links.URLTarget;
import com.fuzzer.util.FuzzerUtil;
import com.gargoylesoftware.htmlunit.FailingHttpStatusCodeException;
import com.gargoylesoftware.htmlunit.HttpMethod;
import com.gargoylesoftware.htmlunit.WebClient;
import com.gargoylesoftware.htmlunit.WebRequest;
import com.gargoylesoftware.htmlunit.html.HtmlPage;

public class XSSExploit {

	private static List<String> EXPLOIT_STRINGS = Config.getXSSList();
	
	public static void exploitForTarget(WebClient wc, URLTarget target) {
		if (target.postArgs.isEmpty() && target.getArgs.isEmpty()) {
			return;
		}
		for (String exploitString : EXPLOIT_STRINGS) {
			if (!Config.shouldUse()) {
				continue;
			}
			if (exploit(wc, target, exploitString)) {
				break;
			}
			try {
				Thread.sleep(Config.TIME_GAP_MS);
			} catch (InterruptedException e) {
			}
		}
	}

	public static boolean exploit(WebClient wc, URLTarget target, String exploitString) {
		String targetPage = target.getURLStringWithGetValue(exploitString);

		WebRequest request;
		try {
			request = new WebRequest(new URL(targetPage),
					target.postArgs.isEmpty() ? HttpMethod.GET : HttpMethod.POST);
		} catch (MalformedURLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return false;
		}

		// Then we set the request parameters
		request.setRequestParameters(target.createPostParams(exploitString));

		// Finally, we can get the page
		HtmlPage page;
		try {
			page = wc.getPage(request);
		} catch (FailingHttpStatusCodeException e) {
			System.out.println(String.format("\tPossible Unsanitized Input (FAIL_STATUS)"));
			return true;
		} catch (IOException e) {
			System.out.println(String.format("\tPossible Unsanitized Input (IO_ERR)"));
			return true;
		}
		
		
		
		// CHECK FOR EXPLOIT
		SensitiveDataExploit.checkForSensitiveData(page);
		if (FuzzerUtil.checkForEcho(page, target, exploitString)) {
			System.out.println("\tXSS/Unsanitized Input Found: " + exploitString);
			return true;
		}
		return false;
	}
}


